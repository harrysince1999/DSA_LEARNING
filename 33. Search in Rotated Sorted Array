    int index(vector<int>&nums){
        int i=0;
        int j=nums.size()-1;
        int n= nums.size();
        while(i<=j){
            int mid = (j-i)/2+i;
            int prev = (mid-1+n)%n;
            int next = (mid+1)%n;
            if(nums[mid]<nums[prev] && nums[mid]<nums[next])    return mid;
            if(nums[0]<=nums[mid])
                i=mid+1;
            else if(nums[mid]<=nums[n-1])
                j=mid-1;
        }
        return 0;
    }
    int search(vector<int>& nums, int target) {
        int minIdx = index(nums);
        int n= nums.size()-1;
        int i,j;
        if(target<=nums[n] && target>=nums[minIdx])
        {
            i=minIdx;
            j=n;
        }
        else
        {
            i=0;
            j=minIdx-1;
        }
        while(i<=j){
            int mid = (j-i)/2+i;
            if(nums[mid]==target)   return mid;
            else if(nums[mid]<target)   i=mid+1;
            else
                j=mid-1;
        }
        return -1;
    }
